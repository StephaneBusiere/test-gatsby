{"version":3,"sources":["webpack://gatsby-starter-wordpress-blog/./src/components/clipPath.js","webpack://gatsby-starter-wordpress-blog/./src/pages/collection.js"],"names":["ClipPathcontainerRef","useRef","ClipPathcontainer2Ref","useEffect","window","gsap","ScrollTrigger","tl1","to","current","ClipPath","animation","trigger","start","end","scrub","pin","anticipatePin","tl2","clipPath-container","className","ref","el","AnimatedCursor","loadable","data","location"],"mappings":"8PAgFA,EAzEiB,WACb,IAAIA,GAAsBC,YAAO,MAC7BC,GAAuBD,YAAO,MAmDlC,OAhDAE,gBAAU,WAGN,GAAI,oBAAOC,OAAwB,CAEjCC,oBAAoBC,KACpBD,kBAAkB,gBAAiBC,KAEnC,IAAMC,EAAMF,gBACZE,EAAIC,GAAGR,EAAqBS,QAAS,CAACC,SAAW,gDAChDF,GAAGR,EAAqBS,QAAS,CAACC,SAAW,+CAC7CF,GAAGR,EAAqBS,QAAS,CAACC,SAAW,gDAC7CF,GAAGR,EAAqBS,QAAS,CAACC,SAAW,6CAC7CF,GAAGR,EAAqBS,QAAS,CAACC,SAAW,kDAK/CJ,WAAqB,CACjBK,UAAUJ,EACVK,QAAQZ,EAAqBS,QAC7BI,MAAM,UACNC,IAAI,SACJC,OAAM,EACNC,KAAI,EACJC,cAAc,IAElB,IAAMC,EAAMb,gBACZa,EAAIV,GAAGN,EAAsBO,QAAS,CAACC,SAAW,gDACjDF,GAAGN,EAAsBO,QAAS,CAACC,SAAW,+CAC9CF,GAAGN,EAAsBO,QAAS,CAACC,SAAW,gDAC9CF,GAAGN,EAAsBO,QAAS,CAACC,SAAW,6CAC9CF,GAAGN,EAAsBO,QAAS,CAACC,SAAW,6CAIhDJ,WAAqB,CACjBK,UAAUO,EACVN,QAAQV,EAAsBO,QAC9BI,MAAM,UACNC,IAAI,SACJC,OAAM,EACNC,KAAI,EACJC,cAAc,OAGnB,IAGC,uBAAKE,sBAAA,GACD,uBAAKC,UAAU,oBAAmBC,IAAM,SAAAC,GAAE,OAAKtB,EAAqBS,QAAUa,IAC1E,uBAAKF,UAAU,eACf,sBAAIA,UAAU,YAAd,mBAEA,uBAAKA,UAAU,eAEnB,uBAAKA,UAAU,qBAAoBC,IAAM,SAAAC,GAAE,OAAKpB,EAAsBO,QAAUa,IAC5E,uBAAKF,UAAU,eACf,sBAAIA,UAAU,YAAd,mBAEA,uBAAKA,UAAU,kBC7DzBG,GAAiBC,E,QAAAA,KAAS,kBAAM,sCAiBtC,EAfmB,SAAC,GAAuB,EAArBC,KAAqB,EAAfC,SAExB,OACI,uBAAKN,UAAU,qBACf,gBAACG,EAAD,MACF,uBAAKH,UAAU,eAGX,gBAAC,IAAD,OAEJ,gBAAC,EAAD","file":"component---src-pages-collection-js-f5076482021ac351f407.js","sourcesContent":["import React from \"react\"\r\nimport {useRef, useEffect} from \"react\";\r\nimport {  StaticQuery, graphql } from \"gatsby\"\r\nimport parse from \"html-react-parser\"\r\nimport { ScrollTrigger } from 'gsap/ScrollTrigger'\r\nimport{gsap} from'gsap'\r\n\r\nconst ClipPath = () => {\r\n    let ClipPathcontainerRef= useRef(null);\r\n    let ClipPathcontainer2Ref= useRef(null);\r\n   \r\n    \r\n    useEffect(() => {  \r\n\r\n        // make sure we're in browser land for gsap plugin registration\r\n        if (typeof window !== `undefined`) {\r\n          // register gsap ScrollTrigger plugin\r\n          gsap.registerPlugin(ScrollTrigger);\r\n          gsap.core.globals('ScrollTrigger', ScrollTrigger)\r\n          \r\n          const tl1 = gsap.timeline();\r\n          tl1.to(ClipPathcontainerRef.current, {ClipPath:  'polygon(20% 0%, 80% 0%, 80% 100%, 20% 100%)'})\r\n          .to(ClipPathcontainerRef.current, {ClipPath:  'polygon(16% 0, 80% 1%, 80% 100%, 16% 100%)'})\r\n          .to(ClipPathcontainerRef.current, {ClipPath:  'polygon(100% 0, 100% 0, 100% 100%, 0% 100%)'})\r\n          .to(ClipPathcontainerRef.current, {ClipPath:  'polygon(0 0, 100% 0, 100% 100%, 0% 100%)'})\r\n          .to(ClipPathcontainerRef.current, {ClipPath:  'polygon(100% 0, 100% 0, 100% 100%, 100% 100%)'})\r\n       \r\n         \r\n          \r\n    \r\n         ScrollTrigger.create({\r\n             animation:tl1,\r\n             trigger:ClipPathcontainerRef.current,\r\n             start:\"top top\",\r\n             end:\"+=1500\",\r\n             scrub:true,\r\n             pin:true,\r\n             anticipatePin:0\r\n         });\r\n         const tl2 = gsap.timeline();\r\n         tl2.to(ClipPathcontainer2Ref.current, {ClipPath:  'polygon(20% 0%, 80% 0%, 80% 100%, 20% 100%)'})\r\n         .to(ClipPathcontainer2Ref.current, {ClipPath:  'polygon(16% 0, 80% 1%, 80% 100%, 16% 100%)'})\r\n         .to(ClipPathcontainer2Ref.current, {ClipPath:  'polygon(100% 0, 100% 0, 100% 100%, 0% 100%)'})\r\n         .to(ClipPathcontainer2Ref.current, {ClipPath:  'polygon(0 0, 100% 0, 100% 100%, 0% 100%)'})\r\n         .to(ClipPathcontainer2Ref.current, {ClipPath:  'polygon(0 0, 100% 0, 100% 100%, 0% 100%)'})\r\n        \r\n         \r\n   \r\n        ScrollTrigger.create({\r\n            animation:tl2,\r\n            trigger:ClipPathcontainer2Ref.current,\r\n            start:\"top top\",\r\n            end:\"+=1500\",\r\n            scrub:true,\r\n            pin:true,\r\n            anticipatePin:0\r\n        });\r\n    }\r\n    }, []);\r\n\r\n    return (\r\n        <div clipPath-container>\r\n            <div className=\"ClipPathcontainer\"ref={ el => (ClipPathcontainerRef.current = el) }>\r\n                <div className=\"Clipcontent\">\r\n                <h1 className=\"clipText\">Testing in out</h1>\r\n                </div>\r\n                <div className=\"ClipImage\"></div>\r\n            </div>\r\n            <div className=\"ClipPathcontainer2\"ref={ el => (ClipPathcontainer2Ref.current = el) }>\r\n                <div className=\"Clipcontent\">\r\n                <h1 className=\"clipText\">Testing in out</h1>\r\n                </div>\r\n                <div className=\"ClipImage2\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    ;\r\n};\r\n\r\nexport default ClipPath","import React from \"react\"\r\nimport Header from \"../components/header\"\r\nimport ClipPath from \"../components/clipPath\"\r\n// import AnimatedCursor from \"react-animated-cursor\"\r\nimport {useRef, useEffect} from \"react\";\r\nimport {  StaticQuery, graphql } from \"gatsby\"\r\nimport parse from \"html-react-parser\"\r\nimport { ScrollTrigger } from 'gsap/ScrollTrigger'\r\nimport{gsap} from'gsap'\r\nimport loadable from '@loadable/component'\r\n\r\nconst AnimatedCursor = loadable(() => import('react-animated-cursor'))\r\n\r\nconst Collection = ({ data, location }) => {\r\n   \r\n    return (\r\n        <div className=\"content-container\">\r\n        <AnimatedCursor />\r\n      <div className=\"top-content\">\r\n          \r\n      \r\n          <Header/>\r\n      </div>\r\n      <ClipPath/>\r\n      </div>\r\n)\r\n}\r\n\r\nexport default Collection"],"sourceRoot":""}